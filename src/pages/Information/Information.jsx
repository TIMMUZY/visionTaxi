import React from 'react'
import classes from './Information.module.scss'

const Information = () => {
  return (
    <div className={classes.Information}>
      <div className={classes.welcome}>
        <p className={classes.txt}>
          Wellcome to <span className={classes.greenTxt}>Vission</span>
        </p>
      </div>
      <div className={classes.infoText}>
        <h3>Что такое скрипт разговора?</h3>
        <p>
          Скрипт разговора для колл-центра — это план или набор инструкций, который помогает операторам колл-центра
          проводить эффективные разговоры с клиентами. В нем обычно указываются не только приветствия и прощания, но и
          ответы на наиболее часто задаваемые вопросы, а также инструкции по решению конкретных проблем. <br /> <br />{' '}
          Зачем он нужен? Ну, скажем так, без скрипта разговора оператор колл-центра может превратиться в перепуганного
          кролика, который с недоумением слушает вопросы клиента и вяло шевелит ушами. Скрипт же позволяет оператору
          четко и грамотно отвечать на вопросы, не теряться в догадках и быстро решать проблемы клиентов. <br /> <br />
          Скрипт разговора помогает контролировать качество обслуживания в call-центрах. Ведь, если все менеджеры
          используют одинаковый скрипт, то руководители могут отслеживать эффективность его использования и проводить
          анализ качества работы менеджера. Скрипт не должен быть “строгими рамками”, которым оператор должен следовать
          слово в слово. Иногда может быть полезно проявить творческий подход и немного изменить шаблон, если ситуация
          требует нестандартного подхода. Назначение скриптов для колл-центра <br /> <br /> Скрипт разговора для
          оператора дает возможность:
        </p>
        <ul>
          <li>Холодных и горячих продажах;</li>
          <li>Маркетинговых исследованиях и опросах;</li>
          <li>Технической поддержке.</li>
        </ul>
        <p>
          Скрипты эффективны для корпоративных колл-центров, которые занимаются приемом и распределением звонков, а
          также аутсорсинговых компаниях, где один оператор обслуживает проекты нескольких клиентов.
        </p>
        <h3>Что такое скрипт разговора?</h3>
        <p>
          Рассмотрим несколько шагов, которые помогут создать эффективный скрипт для обеспечения отличного обслуживания
          клиентов. Шаг 1: Определите цель разговора. Что вы хотите достичь в результате общения с клиентом? Это может
          быть решение конкретной проблемы, продажа товара или услуги, обновление информации о клиенте и т.д. Цель
          разговора должна быть ясной и конкретной, чтобы вы могли легко определить необходимые шаги для ее достижения.{' '}
          <br /> <br />
          Шаг 2: Определите аудиторию. Кто ваши клиенты? Какие вопросы у них могут возникнуть? Какие сценарии
          взаимодействия возможны? Эти вопросы помогут вам создать скрипт, который будет максимально подходить вашим
          клиентам и решать их проблемы.
          <br /> <br />
          Шаг 3: Определите проблемы и вопросы клиентов. Теперь, когда вы знаете, кто ваши клиенты и какая цель
          разговора, вам нужно определить наиболее распространенные проблемы и вопросы клиентов. Это поможет вам
          включить соответствующие ответы в ваш скрипт. Не забывайте, что хороший скрипт должен содержать не только
          информацию о продукте или услуге, но и варианты решения возможных проблем.
          <br /> <br />
          Шаг 4: Планируйте разговоры. Рассмотрите возможные сценарии взаимодействия и определите наиболее эффективные
          ответы на вопросы клиентов. Ваш скрипт должен быть гибким и позволять операторам приспосабливаться к
          конкретной ситуации. Поэтому, обязательно включите несколько вариантов ответов на один и тот же вопрос, чтобы
          сотрудники могли выбрать наиболее подходящий вариант, и при этом звучать естественно и уверенно.
          <br /> <br />
          Шаг 5: Тренируйте своих менеджеров. Как только вы создали скрипт, важно провести обучение операторов.
          Объясните им, как использовать скрипт, показывайте примеры и проводите практические занятия. Скрипт разговора
          оператора колл-центра не должен звучать как заученный монолог, поэтому помогайте менеджерам находить свой
          индивидуальный стиль и подход к общению с клиентами.
          <br /> <br />
          Шаг 6: Отслеживайте и анализируйте результаты. После того как вы создали скрипт и обучили операторов, важно
          отслеживать и анализировать результаты. Оценивайте эффективность скрипта, количество продаж, разрешенных
          проблем и обратную связь от клиентов. Если что-то не работает, внесите необходимые корректировки.
          <br /> <br />
          Скрипт разговора — это не просто инструкция, это ваш инструмент для общения с клиентами. Он поможет вам
          достигать своих целей и обеспечивать отличное обслуживание клиентов. Но помните, что каждый клиент уникален,
          поэтому скрипт должен быть гибким и позволять сотрудникам приспосабливаться к конкретным ситуациям.
        </p>

        <h3>Пять ошибок, которые нужно избегать при использовании скрипта</h3>
        <p>
          Скрипт разговора — полезный инструмент, но его неправильное использование может привести к негативным
          последствиям. Рассмотрим ошибки, которых нужно избегать.
          <br />
          <br />
        </p>
      </div>

      {/* <p>
        Рассмотрим несколько шагов, которые помогут создать эффективный скрипт для обеспечения отличного обслуживания
        клиентов. Шаг 1: Определите цель разговора. Что вы хотите достичь в результате общения с клиентом? Это может
        быть решение конкретной проблемы, продажа товара или услуги, обновление информации о клиенте и т.д. Цель
        разговора должна быть ясной и конкретной, чтобы вы могли легко определить необходимые шаги для ее достижения.
        Шаг 2: Определите аудиторию. Кто ваши клиенты? Какие вопросы у них могут возникнуть? Какие сценарии
        взаимодействия возможны? Эти вопросы помогут вам создать скрипт, который будет максимально подходить вашим
        клиентам и решать их проблемы. Шаг 3: Определите проблемы и вопросы клиентов. Теперь, когда вы знаете, кто ваши
        клиенты и какая цель разговора, вам нужно определить наиболее распространенные проблемы и вопросы клиентов. Это
        поможет вам включить соответствующие ответы в ваш скрипт. Не забывайте, что хороший скрипт должен содержать не
        только информацию о продукте или услуге, но и варианты решения возможных проблем. Шаг 4: Планируйте разговоры.
        Рассмотрите возможные сценарии взаимодействия и определите наиболее эффективные ответы на вопросы клиентов. Ваш
        скрипт должен быть гибким и позволять операторам приспосабливаться к конкретной ситуации. Поэтому, обязательно
        включите несколько вариантов ответов на один и тот же вопрос, чтобы сотрудники могли выбрать наиболее подходящий
        вариант, и при этом звучать естественно и уверенно. Шаг 5: Тренируйте своих менеджеров. Как только вы создали
        скрипт, важно провести обучение операторов. Объясните им, как использовать скрипт, показывайте примеры и
        проводите практические занятия. Скрипт разговора оператора колл-центра не должен звучать как заученный монолог,
        поэтому помогайте менеджерам находить свой индивидуальный стиль и подход к общению с клиентами. Шаг 6:
        Отслеживайте и анализируйте результаты. После того как вы создали скрипт и обучили операторов, важно отслеживать
        и анализировать результаты. Оценивайте эффективность скрипта, количество продаж, разрешенных проблем и обратную
        связь от клиентов. Если что-то не работает, внесите необходимые корректировки. Скрипт разговора — это не просто
        инструкция, это ваш инструмент для общения с клиентами. Он поможет вам достигать своих целей и обеспечивать
        отличное обслуживание клиентов. Но помните, что каждый клиент уникален, поэтому скрипт должен быть гибким и
        позволять сотрудникам приспосабливаться к конкретным ситуациям. 
      </p> */}
    </div>
  )
}

export default Information
